(define (random-generator timer . dontrun)
  (define (resume)
    (timer.stop TIMER0) ; safety measure (to not mess up possible already running timers)
    (timer.set-PR TIMER0 0)
    (timer.MR-control-over TIMER0 0 0 1 0)
    (timer.set-MR TIMER0 TxMR0 100000)
    (timer.reset-n-start TIMER0))
  (define (pause)
    (timer.stop TIMER0))
  (define (get min max)
    (+ min (modulo (timer.value TIMER0)
                   (+ (- max min) 1))))
  
  (define (random-generator-object msg . args)
    (let ((my-param (make-param args 'random-generator-object)))
      (case msg
        ('resume (resume))
        ('pause (pause))
        ('get (get (my-param 1) (my-param 2)))
        (else (error 'random-generator-object "message \"~S\" unknown" msg)))))
  (resume)
  random-generator-object)
